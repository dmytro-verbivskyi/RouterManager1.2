“естова€ задача:

Ќет нужды особо углубл€тьс€ в написание и украшательство на основе 
интерфейсов, вполне достаточно будет нескольких классов. ƒл€ простоты 
будет считать, что у нас супер-надежное оборудование, поэтому 
использование каких-либо средств дл€ посто€нного хранени€ данных
(db, xml, plain files) не об€зательно, просто разместите все в пам€ти.

Ќеобходимо разработать класс - роутер-менеджер пакетов.

1. ≈сть два типа пакетов - пользовательский и системный. ”словно пакеты 
могут быть большими и маленькими.
2. ¬ классе роутера должен быть предусмотрен метод дл€ ввода пакета на 
обработку.
3. ѕакеты с высоким приоритетом должны обрабатыватьс€ в первую очередь. 
—истемные пакеты имеют более высокий приоритет, чем пользовательские. 
ѕакеты с большим размером(внутри конкретного типа - системный или 
пользовательский) имеют больший приоритет, чем маленькие. ѕри прочих 
равных услови€х, пакеты, ожидающие в очереди дольше, должны 
обрабатыватьс€ раньше.

я бы хотел увидеть решение, позвол€ющие добитьс€ высокой 
производительности и надежности. “ак же код должен отвечать требовани€м 
thread-safe.
’отелось бы услышать комментарии о возможности расширени€ этого роутера 
в дальнейшем, например, когда нагрузка будет возрастать.  акие шаги 
можно предприн€ть в этом направлении?
